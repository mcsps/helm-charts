apiVersion: v1
data:
  run.sh: |
    echo "CLUSTERNAME: $CLUSTERNAME"
    CLUSTERRESPONSE=`curl -s "$RANCHERURL/v3/cluster" -H 'content-type: application/json' -H "Authorization: Bearer $APITOKEN" --data-binary '{"type":"cluster","name":"'$CLUSTERNAME'","import":true}'`
    echo "CLUSTERRESPONSE: $CLUSTERRESPONSE"
    CLUSTERID=`echo $CLUSTERRESPONSE | jq -r .id`
    echo "CLUSTERID: $CLUSTERID"
    ID=`curl -s "$RANCHERURL/v3/clusters/${CLUSTERID}/clusterregistrationtoken" -H 'content-type: application/json' -H "Authorization: Bearer $APITOKEN" --data-binary '{"type":"clusterRegistrationToken","clusterId":"'$CLUSTERID'"}'  |jq -r .id`
    AGENTCOMMAND=`curl -s "$RANCHERURL/v3/clusters/${CLUSTERID}/clusterregistrationtoken/$ID" -H 'content-type: application/json' -H "Authorization: Bearer $APITOKEN" | jq -r .insecureCommand`
    echo "AGENTCOMMAND: ${AGENTCOMMAND}"
    echo "apply to cluster..."
    kubectl wait pod/$CLUSTERNAME-vcluster-0 --for=condition=ready
    kubectl exec -it $CLUSTERNAME-vcluster-0 -- "${AGENTCOMMAND}"
    # vcluster connect -n $CLUSTERNAME $CLUSTERNAME-vcluster -- "${AGENTCOMMAND}"
    # add the kind cluster
    # kubectl cluster-info --context kind-${KIND_CLUSTER_NAME}
    # eval "${AGENTCOMMAND}"
kind: ConfigMap
metadata:
  labels:
    app: {{ .Release.Name }}
  name: {{ .Release.Name }}
